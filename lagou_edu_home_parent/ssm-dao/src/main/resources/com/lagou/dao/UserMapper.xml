<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lagou.dao.UserMapper">

    <!-- 1.用户分页查询&多条件组合查询 -->
    <select id="findAllUserByPage" parameterType="com.lagou.domain.UserVO" resultType="com.lagou.domain.User">
        select * from user
        <where>
            <if test="true">
                and is_del != 1
            </if>
            <if test="username != null and username != ''">
                and name = #{username}
            </if>
            <if test="startCreateTime != null and endCreateTime != null">
                and create_time BETWEEN #{startCreateTime} AND #{endCreateTime}
            </if>
        </where>
    </select>

    <!-- 2.更新用户状态 -->
    <update id="updateUserStatus" parameterType="com.lagou.domain.User">
        update user set status = #{status},update_time = #{update_time} where id = #{id}
    </update>

    <!-- 3.用户登录（根据用户名查询具体的用户信息） -->
    <select id="login" parameterType="com.lagou.domain.User" resultType="com.lagou.domain.User">
        select * from user where phone = #{phone}
    </select>

    <!-- 4测试用户注册（加密） -->
    <insert id="register" parameterType="com.lagou.domain.User">
        insert into user(id,name,phone,password,create_time,update_time)
          values(null,#{name},#{phone},#{password},#{create_time},#{update_time})
    </insert>

    <!-- 6.1 根据用户id清空中间表 -->
    <delete id="deleteUserContextRole" parameterType="int">
        delete from user_role_relation where user_id = #{userid}
    </delete>

    <!-- 6.2 分配角色 -->
    <insert id="userContextRole" parameterType="com.lagou.domain.User_Role_relation">
        insert into user_role_relation values(null,#{userId},#{roleId},
             #{createdTime},#{updatedTime},#{createdBy},#{updatedby})
    </insert>

    <!-- 5.根据用户id查询所关联的当前角色信息(回显) -->
    <select id="findUserRelationRoleById" parameterType="int" resultType="com.lagou.domain.Role">
        SELECT * FROM roles r INNER JOIN user_role_relation ur ON r.id = ur.role_id
              WHERE ur.user_id = #{userid}
    </select>

    <!-- 7.1 根据角色ID，查询角色所拥有的顶级菜单(-1) -->
    <select id="findParentMenuByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Menu">
        SELECT DISTINCT m.*
        FROM roles r INNER JOIN role_menu_relation rm ON r.id = rm.role_id
        INNER JOIN menu m ON m.id = rm.menu_id
        WHERE m.parent_id = -1 AND r.id IN
        <if test="list != null and list.size() > 0">
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        </if>
    </select>

    <!-- 7.2 根据PID，查询父菜单所关联的子菜单信息 -->
    <select id="findSubMenuByPid" resultType="com.lagou.domain.Menu" parameterType="int">
        SELECT * FROM menu WHERE parent_id = #{pid}
    </select>

    <!-- 7.3 获取用户拥有的资源权限信息 -->
    <select id="findResourceByRoleId" parameterType="java.util.List" resultType="com.lagou.domain.Resource">
        SELECT DISTINCT re.*
        FROM roles r INNER JOIN role_resource_relation rr ON r.id = rr.role_id
        INNER JOIN resource re ON re.id = rr.resource_id
        WHERE r.id IN
        <if test="list != null and list.size() > 0">
        <foreach collection="list" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        </if>
    </select>

</mapper>